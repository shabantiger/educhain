{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CampusBite\\\\Desktop\\\\educhain\\\\frontend\\\\src\\\\components\\\\IssueCertificate.js\",\n  _s = $RefreshSig$();\n// components/IssueCertificate.js\nimport React, { useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useWeb3 } from '../contexts/Web3Context';\nimport api from '../services/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IssueCertificate = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    studentName: '',\n    studentId: '',\n    studentEmail: '',\n    studentWalletAddress: '',\n    courseName: '',\n    grade: '',\n    certificateType: 'Certificate',\n    graduationDate: ''\n  });\n  const [certificateFile, setCertificateFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1); // 1: Form, 2: Upload, 3: Issue\n  const [uploadResult, setUploadResult] = useState(null);\n  const [issueResult, setIssueResult] = useState(null);\n  const [errors, setErrors] = useState({});\n  const fileInputRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const {\n    isConnected,\n    isConnectedToBase,\n    switchToBaseNetwork\n  } = useWeb3();\n  const certificateTypes = ['Certificate', 'Diploma', 'Degree', 'Transcript', 'Award'];\n  const grades = ['First Class', 'Second Class Upper', 'Second Class Lower', 'Pass', 'A', 'B+', 'B', 'C+', 'C', 'D+', 'D', 'F'];\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error for this field\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Validate file type\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];\n      if (!allowedTypes.includes(file.type)) {\n        setErrors(prev => ({\n          ...prev,\n          file: 'Only JPEG, PNG, and PDF files are allowed'\n        }));\n        return;\n      }\n\n      // Validate file size (10MB max)\n      if (file.size > 10 * 1024 * 1024) {\n        setErrors(prev => ({\n          ...prev,\n          file: 'File size must be less than 10MB'\n        }));\n        return;\n      }\n      setCertificateFile(file);\n      setErrors(prev => ({\n        ...prev,\n        file: ''\n      }));\n\n      // Create preview for images\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = e => setPreview(e.target.result);\n        reader.readAsDataURL(file);\n      } else {\n        setPreview(null);\n      }\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.studentName.trim()) {\n      newErrors.studentName = 'Student name is required';\n    }\n    if (!formData.studentId.trim()) {\n      newErrors.studentId = 'Student ID is required';\n    }\n    if (!formData.studentEmail.trim()) {\n      newErrors.studentEmail = 'Student email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.studentEmail)) {\n      newErrors.studentEmail = 'Invalid email format';\n    }\n    if (!formData.studentWalletAddress.trim()) {\n      newErrors.studentWalletAddress = 'Student wallet address is required';\n    } else if (!ethers.utils.isAddress(formData.studentWalletAddress)) {\n      newErrors.studentWalletAddress = 'Invalid wallet address';\n    }\n    if (!formData.courseName.trim()) {\n      newErrors.courseName = 'Course name is required';\n    }\n    if (!formData.grade) {\n      newErrors.grade = 'Grade is required';\n    }\n    if (!formData.graduationDate) {\n      newErrors.graduationDate = 'Graduation date is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleNext = () => {\n    if (step === 1 && validateForm()) {\n      setStep(2);\n    } else if (step === 2 && certificateFile) {\n      handleUpload();\n    }\n  };\n  const handleUpload = async () => {\n    if (!certificateFile) {\n      setErrors(prev => ({\n        ...prev,\n        file: 'Please select a certificate file'\n      }));\n      return;\n    }\n    try {\n      setLoading(true);\n      const uploadFormData = new FormData();\n      uploadFormData.append('certificate', certificateFile);\n\n      // Add form data\n      Object.keys(formData).forEach(key => {\n        uploadFormData.append(key, formData[key]);\n      });\n      const response = await api.post('/certificates/upload', uploadFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadResult(response.data);\n      setStep(3);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setErrors(prev => {\n        var _error$response, _error$response$data;\n        return {\n          ...prev,\n          upload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to upload certificate'\n        };\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleIssue = async () => {\n    if (!uploadResult) {\n      setErrors(prev => ({\n        ...prev,\n        issue: 'Please upload certificate first'\n      }));\n      return;\n    }\n    if (!isConnected) {\n      setErrors(prev => ({\n        ...prev,\n        wallet: 'Please connect your wallet'\n      }));\n      return;\n    }\n    if (!isConnectedToBase()) {\n      try {\n        await switchToBaseNetwork();\n      } catch (error) {\n        setErrors(prev => ({\n          ...prev,\n          network: 'Please switch to Base network'\n        }));\n        return;\n      }\n    }\n    try {\n      setLoading(true);\n      const issueData = {\n        ...formData,\n        ipfsHash: uploadResult.ipfsHash\n      };\n      const response = await api.post('/certificates/issue', issueData);\n      setIssueResult(response.data);\n\n      // Clear form for next certificate\n      setFormData({\n        studentName: '',\n        studentId: '',\n        studentEmail: '',\n        studentWalletAddress: '',\n        courseName: '',\n        grade: '',\n        certificateType: 'Certificate',\n        graduationDate: ''\n      });\n      setCertificateFile(null);\n      setPreview(null);\n      setUploadResult(null);\n      setStep(1);\n    } catch (error) {\n      console.error('Issue error:', error);\n      setErrors(prev => {\n        var _error$response2, _error$response2$data;\n        return {\n          ...prev,\n          issue: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to issue certificate'\n        };\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetForm = () => {\n    setStep(1);\n    setUploadResult(null);\n    setIssueResult(null);\n    setErrors({});\n  };\n  if (!(user !== null && user !== void 0 && user.isVerified)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificate-issue\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Institution Verification Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your institution must be verified before you can issue certificates. Please contact support for verification.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-issue\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Issue Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create and mint a new academic certificate as an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step >= 1 ? 'active' : ''} ${step > 1 ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-title\",\n          children: \"Certificate Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step >= 2 ? 'active' : ''} ${step > 2 ? 'completed' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-title\",\n          children: \"Upload Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step >= 3 ? 'active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-title\",\n          children: \"Issue on Blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), issueResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Certificate Issued Successfully! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Token ID: #\", issueResult.tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Transaction Hash: \", issueResult.transactionHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIssueResult(null),\n        className: \"btn btn-primary\",\n        children: \"Issue Another Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificate-form\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Certificate Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentName\",\n              children: \"Student Full Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"studentName\",\n              name: \"studentName\",\n              value: formData.studentName,\n              onChange: handleInputChange,\n              className: errors.studentName ? 'error' : '',\n              placeholder: \"Enter student's full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), errors.studentName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.studentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentId\",\n              children: \"Student ID *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"studentId\",\n              name: \"studentId\",\n              value: formData.studentId,\n              onChange: handleInputChange,\n              className: errors.studentId ? 'error' : '',\n              placeholder: \"Enter student ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), errors.studentId && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.studentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentEmail\",\n              children: \"Student Email *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"studentEmail\",\n              name: \"studentEmail\",\n              value: formData.studentEmail,\n              onChange: handleInputChange,\n              className: errors.studentEmail ? 'error' : '',\n              placeholder: \"student@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), errors.studentEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.studentEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentWalletAddress\",\n              children: \"Student Wallet Address *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"studentWalletAddress\",\n              name: \"studentWalletAddress\",\n              value: formData.studentWalletAddress,\n              onChange: handleInputChange,\n              className: errors.studentWalletAddress ? 'error' : '',\n              placeholder: \"0x...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), errors.studentWalletAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.studentWalletAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"The certificate NFT will be minted to this address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"courseName\",\n              children: \"Course/Program Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"courseName\",\n              name: \"courseName\",\n              value: formData.courseName,\n              onChange: handleInputChange,\n              className: errors.courseName ? 'error' : '',\n              placeholder: \"e.g., Bachelor of Computer Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), errors.courseName && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"certificateType\",\n              children: \"Certificate Type *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"certificateType\",\n              name: \"certificateType\",\n              value: formData.certificateType,\n              onChange: handleInputChange,\n              children: certificateTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"grade\",\n              children: \"Grade/Classification *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"grade\",\n              name: \"grade\",\n              value: formData.grade,\n              onChange: handleInputChange,\n              className: errors.grade ? 'error' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), grades.map(grade => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: grade,\n                children: grade\n              }, grade, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), errors.grade && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.grade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"graduationDate\",\n              children: \"Graduation Date *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"graduationDate\",\n              name: \"graduationDate\",\n              value: formData.graduationDate,\n              onChange: handleInputChange,\n              className: errors.graduationDate ? 'error' : '',\n              max: new Date().toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), errors.graduationDate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.graduationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleNext,\n            className: \"btn btn-primary\",\n            children: \"Next: Upload Certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Certificate Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-upload\",\n            onClick: () => {\n              var _fileInputRef$current;\n              return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              ref: fileInputRef,\n              onChange: handleFileChange,\n              accept: \"image/*,.pdf\",\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), certificateFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-selected\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: certificateFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-size\",\n                  children: [(certificateFile.size / 1024 / 1024).toFixed(2), \" MB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: preview,\n                  alt: \"Certificate preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-placeholder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: \"\\uD83D\\uDCC4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Upload Certificate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag and drop or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Supports: JPEG, PNG, PDF (Max 10MB)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), errors.file && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 31\n          }, this), errors.upload && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.upload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certificate-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Certificate Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: user === null || user === void 0 ? void 0 : user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"certificate-type\",\n                children: formData.certificateType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Student:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 22\n                }, this), \" \", formData.studentName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Student ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 22\n                }, this), \" \", formData.studentId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Course:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 22\n                }, this), \" \", formData.courseName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Grade:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 22\n                }, this), \" \", formData.grade]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Graduation Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 22\n                }, this), \" \", formData.graduationDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setStep(1),\n            className: \"btn btn-outline\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleNext,\n            disabled: !certificateFile || loading,\n            className: \"btn btn-primary\",\n            children: loading ? 'Uploading...' : 'Upload to IPFS'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this), step === 3 && uploadResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Issue Certificate on Blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blockchain-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card success\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2705 Upload Successful\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"IPFS Hash:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 20\n              }, this), \" \", uploadResult.ipfsHash]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"File Hash:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 20\n              }, this), \" \", uploadResult.fileHash]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://gateway.pinata.cloud/ipfs/${uploadResult.fileHash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"btn btn-outline btn-sm\",\n              children: \"View on IPFS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blockchain-requirements\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Blockchain Requirements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `requirement ${isConnected ? 'met' : 'unmet'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"requirement-icon\",\n                children: isConnected ? '✅' : '❌'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Wallet Connected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => window.location.reload(),\n                className: \"btn btn-sm btn-outline\",\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `requirement ${isConnectedToBase() ? 'met' : 'unmet'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"requirement-icon\",\n                children: isConnectedToBase() ? '✅' : '❌'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Connected to Base Network\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), !isConnectedToBase() && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: switchToBaseNetwork,\n                className: \"btn btn-sm btn-outline\",\n                children: \"Switch Network\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), errors.wallet && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-error\",\n            children: errors.wallet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 33\n          }, this), errors.network && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-error\",\n            children: errors.network\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 34\n          }, this), errors.issue && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-error\",\n            children: errors.issue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: resetForm,\n            className: \"btn btn-outline\",\n            children: \"Start Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleIssue,\n            disabled: !isConnected || !isConnectedToBase() || loading,\n            className: \"btn btn-primary\",\n            children: loading ? 'Issuing Certificate...' : 'Issue Certificate NFT'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(IssueCertificate, \"NM27ja93KmzfBWqSHXBoeGX7mps=\", false, function () {\n  return [useAuth, useWeb3];\n});\n_c = IssueCertificate;\nvar _c;\n$RefreshReg$(_c, \"IssueCertificate\");","map":{"version":3,"names":["React","useState","useRef","useAuth","useWeb3","api","LoadingSpinner","jsxDEV","_jsxDEV","IssueCertificate","_s","formData","setFormData","studentName","studentId","studentEmail","studentWalletAddress","courseName","grade","certificateType","graduationDate","certificateFile","setCertificateFile","preview","setPreview","loading","setLoading","step","setStep","uploadResult","setUploadResult","issueResult","setIssueResult","errors","setErrors","fileInputRef","user","isConnected","isConnectedToBase","switchToBaseNetwork","certificateTypes","grades","handleInputChange","e","name","value","target","prev","handleFileChange","file","files","allowedTypes","includes","type","size","startsWith","reader","FileReader","onload","result","readAsDataURL","validateForm","newErrors","trim","test","ethers","utils","isAddress","Object","keys","length","handleNext","handleUpload","uploadFormData","FormData","append","forEach","key","response","post","headers","data","error","console","_error$response","_error$response$data","upload","handleIssue","issue","wallet","network","issueData","ipfsHash","_error$response2","_error$response2$data","resetForm","isVerified","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tokenId","transactionHash","onClick","htmlFor","id","onChange","placeholder","map","max","Date","toISOString","split","_fileInputRef$current","current","click","ref","accept","style","display","toFixed","src","alt","disabled","fileHash","href","rel","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/CampusBite/Desktop/educhain/frontend/src/components/IssueCertificate.js"],"sourcesContent":["// components/IssueCertificate.js\r\nimport React, { useState, useRef } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useWeb3 } from '../contexts/Web3Context';\r\nimport api from '../services/api';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst IssueCertificate = () => {\r\n  const [formData, setFormData] = useState({\r\n    studentName: '',\r\n    studentId: '',\r\n    studentEmail: '',\r\n    studentWalletAddress: '',\r\n    courseName: '',\r\n    grade: '',\r\n    certificateType: 'Certificate',\r\n    graduationDate: '',\r\n  });\r\n  const [certificateFile, setCertificateFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [step, setStep] = useState(1); // 1: Form, 2: Upload, 3: Issue\r\n  const [uploadResult, setUploadResult] = useState(null);\r\n  const [issueResult, setIssueResult] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  const fileInputRef = useRef(null);\r\n  const { user } = useAuth();\r\n  const { isConnected, isConnectedToBase, switchToBaseNetwork } = useWeb3();\r\n\r\n  const certificateTypes = [\r\n    'Certificate',\r\n    'Diploma', \r\n    'Degree',\r\n    'Transcript',\r\n    'Award'\r\n  ];\r\n\r\n  const grades = [\r\n    'First Class',\r\n    'Second Class Upper',\r\n    'Second Class Lower', \r\n    'Pass',\r\n    'A',\r\n    'B+',\r\n    'B',\r\n    'C+',\r\n    'C',\r\n    'D+',\r\n    'D',\r\n    'F'\r\n  ];\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear error for this field\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Validate file type\r\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];\r\n      if (!allowedTypes.includes(file.type)) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          file: 'Only JPEG, PNG, and PDF files are allowed'\r\n        }));\r\n        return;\r\n      }\r\n\r\n      // Validate file size (10MB max)\r\n      if (file.size > 10 * 1024 * 1024) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          file: 'File size must be less than 10MB'\r\n        }));\r\n        return;\r\n      }\r\n\r\n      setCertificateFile(file);\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        file: ''\r\n      }));\r\n\r\n      // Create preview for images\r\n      if (file.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => setPreview(e.target.result);\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setPreview(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.studentName.trim()) {\r\n      newErrors.studentName = 'Student name is required';\r\n    }\r\n\r\n    if (!formData.studentId.trim()) {\r\n      newErrors.studentId = 'Student ID is required';\r\n    }\r\n\r\n    if (!formData.studentEmail.trim()) {\r\n      newErrors.studentEmail = 'Student email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.studentEmail)) {\r\n      newErrors.studentEmail = 'Invalid email format';\r\n    }\r\n\r\n    if (!formData.studentWalletAddress.trim()) {\r\n      newErrors.studentWalletAddress = 'Student wallet address is required';\r\n    } else if (!ethers.utils.isAddress(formData.studentWalletAddress)) {\r\n      newErrors.studentWalletAddress = 'Invalid wallet address';\r\n    }\r\n\r\n    if (!formData.courseName.trim()) {\r\n      newErrors.courseName = 'Course name is required';\r\n    }\r\n\r\n    if (!formData.grade) {\r\n      newErrors.grade = 'Grade is required';\r\n    }\r\n\r\n    if (!formData.graduationDate) {\r\n      newErrors.graduationDate = 'Graduation date is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (step === 1 && validateForm()) {\r\n      setStep(2);\r\n    } else if (step === 2 && certificateFile) {\r\n      handleUpload();\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!certificateFile) {\r\n      setErrors(prev => ({ ...prev, file: 'Please select a certificate file' }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const uploadFormData = new FormData();\r\n      uploadFormData.append('certificate', certificateFile);\r\n      \r\n      // Add form data\r\n      Object.keys(formData).forEach(key => {\r\n        uploadFormData.append(key, formData[key]);\r\n      });\r\n\r\n      const response = await api.post('/certificates/upload', uploadFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setUploadResult(response.data);\r\n      setStep(3);\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        upload: error.response?.data?.error || 'Failed to upload certificate'\r\n      }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleIssue = async () => {\r\n    if (!uploadResult) {\r\n      setErrors(prev => ({ ...prev, issue: 'Please upload certificate first' }));\r\n      return;\r\n    }\r\n\r\n    if (!isConnected) {\r\n      setErrors(prev => ({ ...prev, wallet: 'Please connect your wallet' }));\r\n      return;\r\n    }\r\n\r\n    if (!isConnectedToBase()) {\r\n      try {\r\n        await switchToBaseNetwork();\r\n      } catch (error) {\r\n        setErrors(prev => ({ ...prev, network: 'Please switch to Base network' }));\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      \r\n      const issueData = {\r\n        ...formData,\r\n        ipfsHash: uploadResult.ipfsHash\r\n      };\r\n\r\n      const response = await api.post('/certificates/issue', issueData);\r\n      setIssueResult(response.data);\r\n      \r\n      // Clear form for next certificate\r\n      setFormData({\r\n        studentName: '',\r\n        studentId: '',\r\n        studentEmail: '',\r\n        studentWalletAddress: '',\r\n        courseName: '',\r\n        grade: '',\r\n        certificateType: 'Certificate',\r\n        graduationDate: '',\r\n      });\r\n      setCertificateFile(null);\r\n      setPreview(null);\r\n      setUploadResult(null);\r\n      setStep(1);\r\n      \r\n    } catch (error) {\r\n      console.error('Issue error:', error);\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        issue: error.response?.data?.error || 'Failed to issue certificate'\r\n      }));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setStep(1);\r\n    setUploadResult(null);\r\n    setIssueResult(null);\r\n    setErrors({});\r\n  };\r\n\r\n  if (!user?.isVerified) {\r\n    return (\r\n      <div className=\"certificate-issue\">\r\n        <div className=\"alert alert-warning\">\r\n          <h3>Institution Verification Required</h3>\r\n          <p>Your institution must be verified before you can issue certificates. Please contact support for verification.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"certificate-issue\">\r\n      <div className=\"page-header\">\r\n        <h1>Issue Certificate</h1>\r\n        <p>Create and mint a new academic certificate as an NFT</p>\r\n      </div>\r\n\r\n      {/* Step Indicator */}\r\n      <div className=\"step-indicator\">\r\n        <div className={`step ${step >= 1 ? 'active' : ''} ${step > 1 ? 'completed' : ''}`}>\r\n          <span className=\"step-number\">1</span>\r\n          <span className=\"step-title\">Certificate Details</span>\r\n        </div>\r\n        <div className={`step ${step >= 2 ? 'active' : ''} ${step > 2 ? 'completed' : ''}`}>\r\n          <span className=\"step-number\">2</span>\r\n          <span className=\"step-title\">Upload Document</span>\r\n        </div>\r\n        <div className={`step ${step >= 3 ? 'active' : ''}`}>\r\n          <span className=\"step-number\">3</span>\r\n          <span className=\"step-title\">Issue on Blockchain</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Success Message */}\r\n      {issueResult && (\r\n        <div className=\"alert alert-success\">\r\n          <h3>Certificate Issued Successfully! 🎉</h3>\r\n          <p>Token ID: #{issueResult.tokenId}</p>\r\n          <p>Transaction Hash: {issueResult.transactionHash}</p>\r\n          <button onClick={() => setIssueResult(null)} className=\"btn btn-primary\">\r\n            Issue Another Certificate\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"certificate-form\">\r\n        {/* Step 1: Certificate Details */}\r\n        {step === 1 && (\r\n          <div className=\"form-step\">\r\n            <h2>Certificate Details</h2>\r\n            \r\n            <div className=\"form-grid\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"studentName\">Student Full Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"studentName\"\r\n                  name=\"studentName\"\r\n                  value={formData.studentName}\r\n                  onChange={handleInputChange}\r\n                  className={errors.studentName ? 'error' : ''}\r\n                  placeholder=\"Enter student's full name\"\r\n                />\r\n                {errors.studentName && <span className=\"error-text\">{errors.studentName}</span>}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"studentId\">Student ID *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"studentId\"\r\n                  name=\"studentId\"\r\n                  value={formData.studentId}\r\n                  onChange={handleInputChange}\r\n                  className={errors.studentId ? 'error' : ''}\r\n                  placeholder=\"Enter student ID\"\r\n                />\r\n                {errors.studentId && <span className=\"error-text\">{errors.studentId}</span>}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"studentEmail\">Student Email *</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"studentEmail\"\r\n                  name=\"studentEmail\"\r\n                  value={formData.studentEmail}\r\n                  onChange={handleInputChange}\r\n                  className={errors.studentEmail ? 'error' : ''}\r\n                  placeholder=\"student@example.com\"\r\n                />\r\n                {errors.studentEmail && <span className=\"error-text\">{errors.studentEmail}</span>}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"studentWalletAddress\">Student Wallet Address *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"studentWalletAddress\"\r\n                  name=\"studentWalletAddress\"\r\n                  value={formData.studentWalletAddress}\r\n                  onChange={handleInputChange}\r\n                  className={errors.studentWalletAddress ? 'error' : ''}\r\n                  placeholder=\"0x...\"\r\n                />\r\n                {errors.studentWalletAddress && <span className=\"error-text\">{errors.studentWalletAddress}</span>}\r\n                <small className=\"form-help\">The certificate NFT will be minted to this address</small>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"courseName\">Course/Program Name *</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"courseName\"\r\n                  name=\"courseName\"\r\n                  value={formData.courseName}\r\n                  onChange={handleInputChange}\r\n                  className={errors.courseName ? 'error' : ''}\r\n                  placeholder=\"e.g., Bachelor of Computer Science\"\r\n                />\r\n                {errors.courseName && <span className=\"error-text\">{errors.courseName}</span>}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"certificateType\">Certificate Type *</label>\r\n                <select\r\n                  id=\"certificateType\"\r\n                  name=\"certificateType\"\r\n                  value={formData.certificateType}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  {certificateTypes.map(type => (\r\n                    <option key={type} value={type}>{type}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"grade\">Grade/Classification *</label>\r\n                <select\r\n                  id=\"grade\"\r\n                  name=\"grade\"\r\n                  value={formData.grade}\r\n                  onChange={handleInputChange}\r\n                  className={errors.grade ? 'error' : ''}\r\n                >\r\n                  <option value=\"\">Select Grade</option>\r\n                  {grades.map(grade => (\r\n                    <option key={grade} value={grade}>{grade}</option>\r\n                  ))}\r\n                </select>\r\n                {errors.grade && <span className=\"error-text\">{errors.grade}</span>}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"graduationDate\">Graduation Date *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"graduationDate\"\r\n                  name=\"graduationDate\"\r\n                  value={formData.graduationDate}\r\n                  onChange={handleInputChange}\r\n                  className={errors.graduationDate ? 'error' : ''}\r\n                  max={new Date().toISOString().split('T')[0]}\r\n                />\r\n                {errors.graduationDate && <span className=\"error-text\">{errors.graduationDate}</span>}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"button\" onClick={handleNext} className=\"btn btn-primary\">\r\n                Next: Upload Certificate\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Step 2: Upload Certificate */}\r\n        {step === 2 && (\r\n          <div className=\"form-step\">\r\n            <h2>Upload Certificate Document</h2>\r\n            \r\n            <div className=\"upload-section\">\r\n              <div className=\"file-upload\" onClick={() => fileInputRef.current?.click()}>\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  onChange={handleFileChange}\r\n                  accept=\"image/*,.pdf\"\r\n                  style={{ display: 'none' }}\r\n                />\r\n                \r\n                {certificateFile ? (\r\n                  <div className=\"file-selected\">\r\n                    <div className=\"file-info\">\r\n                      <span className=\"file-name\">{certificateFile.name}</span>\r\n                      <span className=\"file-size\">\r\n                        {(certificateFile.size / 1024 / 1024).toFixed(2)} MB\r\n                      </span>\r\n                    </div>\r\n                    {preview && (\r\n                      <div className=\"file-preview\">\r\n                        <img src={preview} alt=\"Certificate preview\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"upload-placeholder\">\r\n                    <div className=\"upload-icon\">📄</div>\r\n                    <h3>Upload Certificate</h3>\r\n                    <p>Drag and drop or click to select</p>\r\n                    <small>Supports: JPEG, PNG, PDF (Max 10MB)</small>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {errors.file && <span className=\"error-text\">{errors.file}</span>}\r\n              {errors.upload && <span className=\"error-text\">{errors.upload}</span>}\r\n            </div>\r\n\r\n            <div className=\"certificate-preview\">\r\n              <h3>Certificate Summary</h3>\r\n              <div className=\"preview-card\">\r\n                <div className=\"preview-header\">\r\n                  <h4>{user?.name}</h4>\r\n                  <span className=\"certificate-type\">{formData.certificateType}</span>\r\n                </div>\r\n                <div className=\"preview-content\">\r\n                  <p><strong>Student:</strong> {formData.studentName}</p>\r\n                  <p><strong>Student ID:</strong> {formData.studentId}</p>\r\n                  <p><strong>Course:</strong> {formData.courseName}</p>\r\n                  <p><strong>Grade:</strong> {formData.grade}</p>\r\n                  <p><strong>Graduation Date:</strong> {formData.graduationDate}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"button\" onClick={() => setStep(1)} className=\"btn btn-outline\">\r\n                Back\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleNext} \r\n                disabled={!certificateFile || loading}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {loading ? 'Uploading...' : 'Upload to IPFS'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Step 3: Issue on Blockchain */}\r\n        {step === 3 && uploadResult && (\r\n          <div className=\"form-step\">\r\n            <h2>Issue Certificate on Blockchain</h2>\r\n            \r\n            <div className=\"blockchain-info\">\r\n              <div className=\"info-card success\">\r\n                <h3>✅ Upload Successful</h3>\r\n                <p><strong>IPFS Hash:</strong> {uploadResult.ipfsHash}</p>\r\n                <p><strong>File Hash:</strong> {uploadResult.fileHash}</p>\r\n                <a \r\n                  href={`https://gateway.pinata.cloud/ipfs/${uploadResult.fileHash}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"btn btn-outline btn-sm\"\r\n                >\r\n                  View on IPFS\r\n                </a>\r\n              </div>\r\n\r\n              <div className=\"blockchain-requirements\">\r\n                <h3>Blockchain Requirements</h3>\r\n                <div className={`requirement ${isConnected ? 'met' : 'unmet'}`}>\r\n                  <span className=\"requirement-icon\">{isConnected ? '✅' : '❌'}</span>\r\n                  <span>Wallet Connected</span>\r\n                  {!isConnected && (\r\n                    <button onClick={() => window.location.reload()} className=\"btn btn-sm btn-outline\">\r\n                      Connect Wallet\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className={`requirement ${isConnectedToBase() ? 'met' : 'unmet'}`}>\r\n                  <span className=\"requirement-icon\">{isConnectedToBase() ? '✅' : '❌'}</span>\r\n                  <span>Connected to Base Network</span>\r\n                  {!isConnectedToBase() && (\r\n                    <button onClick={switchToBaseNetwork} className=\"btn btn-sm btn-outline\">\r\n                      Switch Network\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {errors.wallet && <div className=\"alert alert-error\">{errors.wallet}</div>}\r\n              {errors.network && <div className=\"alert alert-error\">{errors.network}</div>}\r\n              {errors.issue && <div className=\"alert alert-error\">{errors.issue}</div>}\r\n            </div>\r\n\r\n            <div className=\"form-actions\">\r\n              <button type=\"button\" onClick={resetForm} className=\"btn btn-outline\">\r\n                Start Over\r\n              </button>\r\n              <button \r\n                type=\"button\" \r\n                onClick={handleIssue}\r\n                disabled={!isConnected || !isConnectedToBase() || loading}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                {loading ? 'Issuing Certificate...' : 'Issue Certificate NFT'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CampusBite\\\\Desktop\\\\educhain\\\\frontend\\\\src\\\\components\\\\StudentPortal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3 } from '../contexts/Web3Context';\n// Remove useAuth import since we don't need login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentPortal = () => {\n  _s();\n  const [walletCertificates, setWalletCertificates] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Only use Web3 context, not Auth\n  const {\n    account,\n    connectWallet,\n    isConnected\n  } = useWeb3();\n\n  // Fetch certificates when wallet connects\n  useEffect(() => {\n    if (account) {\n      fetchWalletCertificates(account);\n    }\n  }, [account]);\n  const fetchWalletCertificates = async walletAddress => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Call your smart contract or API to get certificates for this wallet\n      const response = await fetch(`/api/certificates/wallet/${walletAddress}`);\n      const data = await response.json();\n      if (response.ok) {\n        setWalletCertificates(data.certificates || []);\n      } else {\n        setError(data.message || 'Failed to fetch certificates');\n      }\n    } catch (err) {\n      setError('Error fetching certificates: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If no wallet connected, show connection prompt\n  if (!isConnected || !account) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-portal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-connect-prompt\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Student Certificate Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect your wallet to view your certificates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"btn btn-primary\",\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main portal content when wallet is connected\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-portal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Certificates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wallet: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchWalletCertificates(account),\n        className: \"btn btn-outline\",\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'load certificate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading certificates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificates-grid\",\n      children: walletCertificates.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-certificates\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No certificates found for this wallet address.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : walletCertificates.map((cert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certificate-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: cert.courseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Student:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this), \" \", cert.studentName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Grade:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 20\n          }, this), \" \", cert.grade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Institution:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 20\n          }, this), \" \", cert.institution]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 20\n          }, this), \" \", new Date(cert.completionDate * 1000).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm\",\n          children: \"View Certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentPortal, \"/jRJiwX7q1jFg3Q/Lm0Ikf+SiJE=\", false, function () {\n  return [useWeb3];\n});\n_c = StudentPortal;\nexport default StudentPortal;\nvar _c;\n$RefreshReg$(_c, \"StudentPortal\");","map":{"version":3,"names":["React","useState","useEffect","useWeb3","jsxDEV","_jsxDEV","StudentPortal","_s","walletCertificates","setWalletCertificates","loading","setLoading","error","setError","account","connectWallet","isConnected","fetchWalletCertificates","walletAddress","response","fetch","data","json","ok","certificates","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","cert","index","courseName","studentName","grade","institution","Date","completionDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/CampusBite/Desktop/educhain/frontend/src/components/StudentPortal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useWeb3 } from '../contexts/Web3Context';\r\n// Remove useAuth import since we don't need login\r\n\r\nconst StudentPortal = () => {\r\n  const [walletCertificates, setWalletCertificates] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  // Only use Web3 context, not Auth\r\n  const { account, connectWallet, isConnected } = useWeb3();\r\n\r\n  // Fetch certificates when wallet connects\r\n  useEffect(() => {\r\n    if (account) {\r\n      fetchWalletCertificates(account);\r\n    }\r\n  }, [account]);\r\n\r\n  const fetchWalletCertificates = async (walletAddress) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Call your smart contract or API to get certificates for this wallet\r\n      const response = await fetch(`/api/certificates/wallet/${walletAddress}`);\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setWalletCertificates(data.certificates || []);\r\n      } else {\r\n        setError(data.message || 'Failed to fetch certificates');\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching certificates: ' + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // If no wallet connected, show connection prompt\r\n  if (!isConnected || !account) {\r\n    return (\r\n      <div className=\"student-portal\">\r\n        <div className=\"wallet-connect-prompt\">\r\n          <h2>Student Certificate Portal</h2>\r\n          <p>Connect your wallet to view your certificates</p>\r\n          <button \r\n            onClick={connectWallet}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Connect Wallet\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main portal content when wallet is connected\r\n  return (\r\n    <div className=\"student-portal\">\r\n      <div className=\"portal-header\">\r\n        <h2>My Certificates</h2>\r\n        <p>Wallet: {account}</p>\r\n        <button \r\n          onClick={() => fetchWalletCertificates(account)}\r\n          className=\"btn btn-outline\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Refreshing...' : 'load certificate'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"alert alert-error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"loading\">Loading certificates...</div>\r\n      ) : (\r\n        <div className=\"certificates-grid\">\r\n          {walletCertificates.length === 0 ? (\r\n            <div className=\"no-certificates\">\r\n              <p>No certificates found for this wallet address.</p>\r\n            </div>\r\n          ) : (\r\n            walletCertificates.map((cert, index) => (\r\n              <div key={index} className=\"certificate-card\">\r\n                <h3>{cert.courseName}</h3>\r\n                <p><strong>Student:</strong> {cert.studentName}</p>\r\n                <p><strong>Grade:</strong> {cert.grade}</p>\r\n                <p><strong>Institution:</strong> {cert.institution}</p>\r\n                <p><strong>Date:</strong> {new Date(cert.completionDate * 1000).toLocaleDateString()}</p>\r\n                <button className=\"btn btn-sm\">View Certificate</button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentPortal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
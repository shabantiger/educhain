{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CampusBite\\\\Desktop\\\\educhain\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      // Verify token and get user info\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async () => {\n    try {\n      // Since we don't have a profile endpoint, we'll decode the token\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        setUser({\n          id: payload.institutionId,\n          name: payload.name,\n          walletAddress: payload.walletAddress\n        });\n      }\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await api.post('/institutions/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        institution\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(institution);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async institutionData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await api.post('/institutions/register', institutionData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      setError(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setError(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","fetchUserProfile","payload","JSON","parse","atob","split","id","institutionId","name","walletAddress","console","logout","login","email","password","response","post","institution","data","setItem","success","_error$response","_error$response$data","message","register","institutionData","_error$response2","_error$response2$data","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CampusBite/Desktop/educhain/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// contexts/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      // Verify token and get user info\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      fetchUserProfile();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      // Since we don't have a profile endpoint, we'll decode the token\r\n      const token = localStorage.getItem('authToken');\r\n      if (token) {\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n        setUser({\r\n          id: payload.institutionId,\r\n          name: payload.name,\r\n          walletAddress: payload.walletAddress\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch user profile:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      \r\n      const response = await api.post('/institutions/login', {\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { token, institution } = response.data;\r\n      \r\n      localStorage.setItem('authToken', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(institution);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (institutionData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n      \r\n      const response = await api.post('/institutions/register', institutionData);\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      setError(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}